{"ast":null,"code":"var _jsxFileName = \"/home/kevin/Boss/Projet/Web/reactexpress/tache/Frontend/src/elements/pages/Register.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleRegister = () => {\n    const users = JSON.parse(localStorage.getItem('users')) || [];\n    if (users.find(u => u.username === username)) {\n      alert(\"Nom d'utilisateur déjà utilisé\");\n      return;\n    }\n    const newUser = {\n      id: Date.now(),\n      username,\n      password\n    };\n    users.push(newUser);\n    localStorage.setItem('users', JSON.stringify(users));\n    alert(\"Compte créé avec succès !\");\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col justify-center items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl mb-4\",\n      children: \"Cr\\xE9er un compte\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nom d'utilisateur\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      className: \"mb-2 p-2 border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Mot de passe\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      className: \"mb-2 p-2 border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleRegister,\n      className: \"bg-green-600 text-white p-2\",\n      children: \"S'inscrire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","Register","_s","username","setUsername","password","setPassword","navigate","handleRegister","users","JSON","parse","localStorage","getItem","find","u","alert","newUser","id","Date","now","push","setItem","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/kevin/Boss/Projet/Web/reactexpress/tache/Frontend/src/elements/pages/Register.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function Register() {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n\n  const handleRegister = () => {\n    const users = JSON.parse(localStorage.getItem('users')) || [];\n    if (users.find(u => u.username === username)) {\n      alert(\"Nom d'utilisateur déjà utilisé\");\n      return;\n    }\n    const newUser = { id: Date.now(), username, password };\n    users.push(newUser);\n    localStorage.setItem('users', JSON.stringify(users));\n    alert(\"Compte créé avec succès !\");\n    navigate('/login');\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col justify-center items-center\">\n      <h1 className=\"text-2xl mb-4\">Créer un compte</h1>\n      <input type=\"text\" placeholder=\"Nom d'utilisateur\" value={username} onChange={e => setUsername(e.target.value)} className=\"mb-2 p-2 border\" />\n      <input type=\"password\" placeholder=\"Mot de passe\" value={password} onChange={e => setPassword(e.target.value)} className=\"mb-2 p-2 border\" />\n      <button onClick={handleRegister} className=\"bg-green-600 text-white p-2\">S'inscrire</button>\n    </div>\n  );\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE;IAC7D,IAAIJ,KAAK,CAACK,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACZ,QAAQ,KAAKA,QAAQ,CAAC,EAAE;MAC5Ca,KAAK,CAAC,gCAAgC,CAAC;MACvC;IACF;IACA,MAAMC,OAAO,GAAG;MAAEC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEjB,QAAQ;MAAEE;IAAS,CAAC;IACtDI,KAAK,CAACY,IAAI,CAACJ,OAAO,CAAC;IACnBL,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEZ,IAAI,CAACa,SAAS,CAACd,KAAK,CAAC,CAAC;IACpDO,KAAK,CAAC,2BAA2B,CAAC;IAClCT,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA;IAAKwB,SAAS,EAAC,wDAAwD;IAAAC,QAAA,gBACrEzB,OAAA;MAAIwB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClD7B,OAAA;MAAO8B,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,mBAAmB;MAACC,KAAK,EAAE7B,QAAS;MAAC8B,QAAQ,EAAEC,CAAC,IAAI9B,WAAW,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACR,SAAS,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9I7B,OAAA;MAAO8B,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,cAAc;MAACC,KAAK,EAAE3B,QAAS;MAAC4B,QAAQ,EAAEC,CAAC,IAAI5B,WAAW,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAACR,SAAS,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7I7B,OAAA;MAAQoC,OAAO,EAAE5B,cAAe;MAACgB,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzF,CAAC;AAEV;AAAC3B,EAAA,CA1BuBD,QAAQ;EAAA,QAGbH,WAAW;AAAA;AAAAuC,EAAA,GAHNpC,QAAQ;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}