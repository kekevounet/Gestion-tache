{"ast":null,"code":"/* global bootstrap: false */\n\nif (typeof document.body.attachShadow === 'function') {\n  const shadowRoot = document.getElementById('shadow').attachShadow({\n    mode: 'open'\n  });\n  shadowRoot.innerHTML = '<button id=\"firstShadowTooltip\" type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Tooltip on top in a shadow dom\">' + '  Tooltip on top in a shadow dom' + '</button>' + '<button id=\"secondShadowTooltip\" type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Tooltip on top in a shadow dom with container option\">' + '  Tooltip on top in a shadow dom' + '</button>';\n  new bootstrap.Tooltip(shadowRoot.firstChild);\n  new bootstrap.Tooltip(shadowRoot.getElementById('secondShadowTooltip'), {\n    container: shadowRoot\n  });\n}\nnew bootstrap.Tooltip('#tooltipElement', {\n  container: '#customContainer'\n});\nconst targetTooltip = new bootstrap.Tooltip('#target', {\n  placement: 'top',\n  trigger: 'manual'\n});\ntargetTooltip.show();\ndocument.querySelectorAll('[data-bs-toggle=\"tooltip\"]').forEach(tooltipEl => new bootstrap.Tooltip(tooltipEl));\nnew bootstrap.Tooltip('#wrapperTriggeredBySelector', {\n  animation: false,\n  selector: '.bs-dynamic-tooltip'\n});\n\n/* eslint-disable no-unused-vars */\nfunction duplicateButtons() {\n  const buttonsBlock = document.querySelector('.selectorButtonsBlock'); // get first\n  const buttonsBlockClone = buttonsBlock.cloneNode(true);\n  buttonsBlockClone.innerHTML += new Date().toLocaleString();\n  document.querySelector('#wrapperTriggeredBySelector').append(buttonsBlockClone);\n}\n/* eslint-enable no-unused-vars */","map":{"version":3,"names":["document","body","attachShadow","shadowRoot","getElementById","mode","innerHTML","bootstrap","Tooltip","firstChild","container","targetTooltip","placement","trigger","show","querySelectorAll","forEach","tooltipEl","animation","selector","duplicateButtons","buttonsBlock","querySelector","buttonsBlockClone","cloneNode","Date","toLocaleString","append"],"sources":["/home/kevin/Boss/Projet/Web/reactexpress/tache/Frontend/src/elements/components/Script.js"],"sourcesContent":["\n      /* global bootstrap: false */\n\n      if (typeof document.body.attachShadow === 'function') {\n        const shadowRoot = document.getElementById('shadow').attachShadow({ mode: 'open' })\n        shadowRoot.innerHTML =\n          '<button id=\"firstShadowTooltip\" type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Tooltip on top in a shadow dom\">' +\n          '  Tooltip on top in a shadow dom' +\n          '</button>' +\n          '<button id=\"secondShadowTooltip\" type=\"button\" class=\"btn btn-secondary\" data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Tooltip on top in a shadow dom with container option\">' +\n          '  Tooltip on top in a shadow dom' +\n          '</button>'\n\n        new bootstrap.Tooltip(shadowRoot.firstChild)\n        new bootstrap.Tooltip(shadowRoot.getElementById('secondShadowTooltip'), {\n          container: shadowRoot\n        })\n      }\n\n      new bootstrap.Tooltip('#tooltipElement', {\n        container: '#customContainer'\n      })\n\n      const targetTooltip = new bootstrap.Tooltip('#target', {\n        placement: 'top',\n        trigger: 'manual'\n      })\n      targetTooltip.show()\n\n      document.querySelectorAll('[data-bs-toggle=\"tooltip\"]').forEach(tooltipEl => new bootstrap.Tooltip(tooltipEl))\n\n\n\n\n      new bootstrap.Tooltip('#wrapperTriggeredBySelector', {\n        animation: false,\n        selector: '.bs-dynamic-tooltip'\n      })\n\n      /* eslint-disable no-unused-vars */\n      function duplicateButtons() {\n        const buttonsBlock = document.querySelector('.selectorButtonsBlock')// get first\n        const buttonsBlockClone = buttonsBlock.cloneNode(true)\n        buttonsBlockClone.innerHTML += new Date().toLocaleString()\n        document.querySelector('#wrapperTriggeredBySelector').append(buttonsBlockClone)\n      }\n      /* eslint-enable no-unused-vars */\n"],"mappings":"AACM;;AAEA,IAAI,OAAOA,QAAQ,CAACC,IAAI,CAACC,YAAY,KAAK,UAAU,EAAE;EACpD,MAAMC,UAAU,GAAGH,QAAQ,CAACI,cAAc,CAAC,QAAQ,CAAC,CAACF,YAAY,CAAC;IAAEG,IAAI,EAAE;EAAO,CAAC,CAAC;EACnFF,UAAU,CAACG,SAAS,GAClB,kKAAkK,GAClK,kCAAkC,GAClC,WAAW,GACX,yLAAyL,GACzL,kCAAkC,GAClC,WAAW;EAEb,IAAIC,SAAS,CAACC,OAAO,CAACL,UAAU,CAACM,UAAU,CAAC;EAC5C,IAAIF,SAAS,CAACC,OAAO,CAACL,UAAU,CAACC,cAAc,CAAC,qBAAqB,CAAC,EAAE;IACtEM,SAAS,EAAEP;EACb,CAAC,CAAC;AACJ;AAEA,IAAII,SAAS,CAACC,OAAO,CAAC,iBAAiB,EAAE;EACvCE,SAAS,EAAE;AACb,CAAC,CAAC;AAEF,MAAMC,aAAa,GAAG,IAAIJ,SAAS,CAACC,OAAO,CAAC,SAAS,EAAE;EACrDI,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACX,CAAC,CAAC;AACFF,aAAa,CAACG,IAAI,CAAC,CAAC;AAEpBd,QAAQ,CAACe,gBAAgB,CAAC,4BAA4B,CAAC,CAACC,OAAO,CAACC,SAAS,IAAI,IAAIV,SAAS,CAACC,OAAO,CAACS,SAAS,CAAC,CAAC;AAK9G,IAAIV,SAAS,CAACC,OAAO,CAAC,6BAA6B,EAAE;EACnDU,SAAS,EAAE,KAAK;EAChBC,QAAQ,EAAE;AACZ,CAAC,CAAC;;AAEF;AACA,SAASC,gBAAgBA,CAAA,EAAG;EAC1B,MAAMC,YAAY,GAAGrB,QAAQ,CAACsB,aAAa,CAAC,uBAAuB,CAAC;EACpE,MAAMC,iBAAiB,GAAGF,YAAY,CAACG,SAAS,CAAC,IAAI,CAAC;EACtDD,iBAAiB,CAACjB,SAAS,IAAI,IAAImB,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC;EAC1D1B,QAAQ,CAACsB,aAAa,CAAC,6BAA6B,CAAC,CAACK,MAAM,CAACJ,iBAAiB,CAAC;AACjF;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}